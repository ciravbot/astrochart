# Set datetime and position
from flatlib.datetime import Datetime
from flatlib.geopos import GeoPos
from flatlib import const
from flatlib import aspects
import astro_unicode as glyph

date = Datetime('1979/04/17', '16:49', '-06:00')
pos = GeoPos('40n48', '91w06')

# Finally create the chart
from flatlib.chart import Chart
chart = Chart(date, pos, IDs=const.LIST_OBJECTS)
sun = chart.getObject(const.SUN)
moon = chart.getObject(const.MOON)
mercury = chart.getObject(const.MERCURY)
venus = chart.getObject(const.VENUS)
mars = chart.getObject(const.MARS)
jupiter = chart.getObject(const.JUPITER)
saturn = chart.getObject(const.SATURN)
uranus = chart.getObject(const.URANUS)
neptune = chart.getObject(const.NEPTUNE)
pluto = chart.getObject(const.PLUTO)
asc = chart.get(const.ASC)
mc = chart.get(const.MC)

#house data
sun_house = chart.houses.getObjectHouse(sun)
moon_house = chart.houses.getObjectHouse(moon)
mercury_house = chart.houses.getObjectHouse(mercury)
venus_house = chart.houses.getObjectHouse(venus)
mars_house = chart.houses.getObjectHouse(mars)
jupiter_house = chart.houses.getObjectHouse(jupiter)
saturn_house = chart.houses.getObjectHouse(saturn)
uranus_house = chart.houses.getObjectHouse(uranus)
neptune_house = chart.houses.getObjectHouse(neptune)
pluto_house = chart.houses.getObjectHouse(pluto)

#Output
print("Ascendant: ", asc)
print("MC: ", mc)
print(chart.getMoonPhase())
print("---------------------")
print(sun, sun.movement())
print(moon, moon.movement())
print(mercury, mercury.movement())
print(venus, venus.movement())
print(mars, mars.movement())
print(jupiter, jupiter.movement())
print(saturn, saturn.movement())
print(uranus, uranus.movement())
print(neptune, neptune.movement())
print(pluto, pluto.movement())
print(" ")
print("---------------------")
print(" ")
print("Sun ",sun_house)
print("Moon ",moon_house)
print("Mercury ",mercury_house)
print("Venus ",venus_house)
print("Mars ",mars_house)
print("Jupiter ",jupiter_house)
print("Saturn ",saturn_house)
print("Uranus ",uranus_house)
print("Neptune ",neptune_house)
print("Pluto ",pluto_house)
print(" ")
print("---------------------")
print(" ")
aspect = aspects.getAspect(sun, moon, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, mercury, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, venus, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, mars, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, jupiter, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, saturn, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, uranus, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, neptune, const.MAJOR_ASPECTS)
print(aspect)
aspect = aspects.getAspect(sun, pluto, const.MAJOR_ASPECTS)
print(aspect)
print(" ")
print("---------------------")
print(" ")
print(glyph.aries)
for obj in chart.objects:
    print(obj)

